generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Plan {
  id                      String @id @default(cuid()) @map("_id")
  name                    String
  description             String
  stripe_price_monthly_id String
  stripe_price_yearly_id  String
  features                String
}

enum Role {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?   @default("")
  last_name     String?   @default("")
  email         String?   @unique
  created       DateTime  @default(now())
  emailVerified DateTime?
  onboarded     Boolean?  @default(false)
  phone_number  String?   @default("")
  image         String?   @default("")
  customer_id   String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Slot {
  id        String   @id @default(cuid()) @map("_id")
  startTime DateTime
  endTime   DateTime
  isBooked  Boolean  @default(false)
  email     String?
  fleet_id  String
  createdAt DateTime @default(now()) // Automatically set to the current date and time when a record is created
  updatedAt DateTime @updatedAt      // Automatically updated to the current date and time whenever a record is updated
  promoPay  Int?     // Optional field to represent a dollar amount in cents
}

model Agents {
  id        String   @id @default(cuid()) @map("_id")
  fleet_id  String
  email     String?
  createdAt DateTime @default(now()) // Automatically set to the current date and time when a record is created
}

